Search.setIndex({"alltitles": {"API Reference": [[0, "api-reference"]], "Coding guidelines": [[1, "coding-guidelines"]], "Contents:": [[2, null]], "Contributing": [[3, "contributing"]], "Contributing to cycquery": [[1, "contributing-to-cycquery"]], "Example 1. Get all female patients discharged in 2014 (limit to 100 rows).": [[64, "Example-1.-Get-all-female-patients-discharged-in-2014-(limit-to-100-rows)."]], "Example 1. Get all male patients with a mortality outcome.": [[66, "Example-1.-Get-all-male-patients-with-a-mortality-outcome."]], "Example 1. Get all patient admissions from 2021 or later (approx year of admission)": [[67, "Example-1.-Get-all-patient-admissions-from-2021-or-later-(approx-year-of-admission)"]], "Example 1. Get all patient visits in or after 2010.": [[68, "Example-1.-Get-all-patient-visits-in-or-after-2010."]], "Example 1. Get all patient visits that ended in a mortality outcome in or after 2010.": [[68, "Example-1.-Get-all-patient-visits-that-ended-in-a-mortality-outcome-in-or-after-2010."]], "Example 1a. Create a table with only one hospitalization per patient, keeping the most recent encounter for each patient. Sort the dataset by patient_id_hashed and discharge_date_time, and then keep the recent record.": [[65, "Example-1a.-Create-a-table-with-only-one-hospitalization-per-patient,-keeping-the-most-recent-encounter-for-each-patient.-Sort-the-dataset-by-patient_id_hashed-and-discharge_date_time,-and-then-keep-the-recent-record."]], "Example 1b. From the above set of encounters, take a subset of patients who were discharged between April 1, 2015 and March 31, 2016.": [[65, "Example-1b.-From-the-above-set-of-encounters,-take-a-subset-of-patients-who-were-discharged-between-April-1,-2015-and-March-31,-2016."]], "Example 1c. From the above set of encounters, get the total number of admissions for each hospital.": [[65, "Example-1c.-From-the-above-set-of-encounters,-get-the-total-number-of-admissions-for-each-hospital."]], "Example 2. Get all female patient encounters with diagnoses (gastroenteritis in ICD-9 long title).": [[66, "Example-2.-Get-all-female-patient-encounters-with-diagnoses-(gastroenteritis-in-ICD-9-long-title)."]], "Example 2. Get all measurements for female patient visits with sepsis diagnoses, that ended in a mortality outcome.": [[68, "Example-2.-Get-all-measurements-for-female-patient-visits-with-sepsis-diagnoses,-that-ended-in-a-mortality-outcome."]], "Example 2. Get all patient encounters with diagnoses (schizophrenia in ICD-10 long title), in the year 2015.": [[67, "Example-2.-Get-all-patient-encounters-with-diagnoses-(schizophrenia-in-ICD-10-long-title),-in-the-year-2015."]], "Example 2. Get all patient encounters with diagnoses (schizophrenia in diagnosisstring), discharged in the year 2015.": [[64, "Example-2.-Get-all-patient-encounters-with-diagnoses-(schizophrenia-in-diagnosisstring),-discharged-in-the-year-2015."]], "Example 2. Get measurements for all visits in or after 2020.": [[68, "Example-2.-Get-measurements-for-all-visits-in-or-after-2020."]], "Example 2a. How many sodium tests were placed between Apr 1, 2015 and May 31, 2015 at hospital 101?": [[65, "Example-2a.-How-many-sodium-tests-were-placed-between-Apr-1,-2015-and-May-31,-2015-at-hospital-101?"]], "Example 3. Advanced - uses ConditionRegexMatch from cycquery.ops. Get all patient encounters with diagnoses (ICD-9 long title contains schizophrenia and chronic ), in the year 2015.": [[67, "Example-3.-Advanced---uses-ConditionRegexMatch-from-cycquery.ops.-Get-all-patient-encounters-with-diagnoses-(ICD-9-long-title-contains-schizophrenia-and-chronic-),-in-the-year-2015."]], "Example 3. Get potassium lab tests for female patients.": [[66, "Example-3.-Get-potassium-lab-tests-for-female-patients."]], "Example 3. Get potassium lab tests for patients discharged in the year 2014, for all teaching hospitals.": [[64, "Example-3.-Get-potassium-lab-tests-for-patients-discharged-in-the-year-2014,-for-all-teaching-hospitals."]], "Example 4. Get AaDO2 carevue chart events for male patients that have a valuenum of less than 20.": [[66, "Example-4.-Get-AaDO2-carevue-chart-events-for-male-patients-that-have-a-valuenum-of-less-than-20."]], "Example 4. Get glucose medications (substring search) for female patients discharged in 2014.": [[64, "Example-4.-Get-glucose-medications-(substring-search)-for-female-patients-discharged-in-2014."]], "Example 4. Get routine vital signs for patients from year 2015.": [[67, "Example-4.-Get-routine-vital-signs-for-patients-from-year-2015."]], "Example 5. Get hemoglobin lab tests for patients from year 2009.": [[67, "Example-5.-Get-hemoglobin-lab-tests-for-patients-from-year-2009."]], "Example 6. Get radiology reports and filter on keywords lymphadenopathy and infectious occurring together from year 2009.": [[67, "Example-6.-Get-radiology-reports-and-filter-on-keywords-lymphadenopathy-and-infectious-occurring-together-from-year-2009."]], "Example 7. Get all female patient encounters from year 2015, and return batches partitioned and indexed on subject_id.": [[67, "Example-7.-Get-all-female-patient-encounters-from-year-2015,-and-return-batches-partitioned-and-indexed-on-subject_id."]], "Example 8. Running a raw SQL string.": [[67, "Example-8.-Running-a-raw-SQL-string."]], "GEMINI tutorial": [[65, "GEMINI-tutorial"]], "Imports and instantiate EICUQuerier": [[64, "Imports-and-instantiate-EICUQuerier"]], "Imports and instantiate GEMINIQuerier.": [[65, "Imports-and-instantiate-GEMINIQuerier."]], "Imports and instantiate MIMICIIIQuerier": [[66, "Imports-and-instantiate-MIMICIIIQuerier"]], "Imports and instantiate MIMICIVQuerier": [[67, "Imports-and-instantiate-MIMICIVQuerier"]], "Imports and instantiate OMOPQuerier.": [[68, "Imports-and-instantiate-OMOPQuerier."], [68, "id1"]], "Installing cycquery using pip": [[3, "installing-cycquery-using-pip"]], "MIMIC-III tutorial": [[66, "MIMIC-III-tutorial"]], "MIMIC-IV tutorial": [[67, "MIMIC-IV-tutorial"]], "OMOP tutorial": [[68, "OMOP-tutorial"]], "Pre-commit hooks": [[1, "pre-commit-hooks"]], "Query postgresql database": [[3, "query-postgresql-database"]], "Tutorials": [[63, "tutorials"]], "Using poetry": [[3, "using-poetry"]], "Welcome to cycquery\u2019s documentation!": [[2, "welcome-to-cycquery-s-documentation"]], "cycquery": [[3, "cycquery"], [62, "module-cycquery"]], "cycquery.base": [[4, "module-cycquery.base"]], "cycquery.base.DatasetQuerier": [[5, "cycquery-base-datasetquerier"]], "cycquery.eicu": [[6, "module-cycquery.eicu"]], "cycquery.eicu.EICUQuerier": [[7, "cycquery-eicu-eicuquerier"]], "cycquery.gemini": [[8, "module-cycquery.gemini"]], "cycquery.gemini.GEMINIQuerier": [[9, "cycquery-gemini-geminiquerier"]], "cycquery.interface": [[10, "module-cycquery.interface"]], "cycquery.interface.QueryInterface": [[11, "cycquery-interface-queryinterface"]], "cycquery.mimiciii": [[12, "module-cycquery.mimiciii"]], "cycquery.mimiciii.MIMICIIIQuerier": [[13, "cycquery-mimiciii-mimiciiiquerier"]], "cycquery.mimiciv": [[14, "module-cycquery.mimiciv"]], "cycquery.mimiciv.MIMICIVQuerier": [[15, "cycquery-mimiciv-mimicivquerier"]], "cycquery.omop": [[16, "module-cycquery.omop"]], "cycquery.omop.OMOPQuerier": [[17, "cycquery-omop-omopquerier"]], "cycquery.ops": [[18, "module-cycquery.ops"]], "cycquery.ops.AddColumn": [[19, "cycquery-ops-addcolumn"]], "cycquery.ops.AddDeltaColumn": [[20, "cycquery-ops-adddeltacolumn"]], "cycquery.ops.AddDeltaConstant": [[21, "cycquery-ops-adddeltaconstant"]], "cycquery.ops.AddNumeric": [[22, "cycquery-ops-addnumeric"]], "cycquery.ops.And": [[23, "cycquery-ops-and"]], "cycquery.ops.Apply": [[24, "cycquery-ops-apply"]], "cycquery.ops.Cast": [[25, "cycquery-ops-cast"]], "cycquery.ops.ConditionAfterDate": [[26, "cycquery-ops-conditionafterdate"]], "cycquery.ops.ConditionBeforeDate": [[27, "cycquery-ops-conditionbeforedate"]], "cycquery.ops.ConditionEndsWith": [[28, "cycquery-ops-conditionendswith"]], "cycquery.ops.ConditionEquals": [[29, "cycquery-ops-conditionequals"]], "cycquery.ops.ConditionGreaterThan": [[30, "cycquery-ops-conditiongreaterthan"]], "cycquery.ops.ConditionIn": [[31, "cycquery-ops-conditionin"]], "cycquery.ops.ConditionInMonths": [[32, "cycquery-ops-conditioninmonths"]], "cycquery.ops.ConditionInYears": [[33, "cycquery-ops-conditioninyears"]], "cycquery.ops.ConditionLessThan": [[34, "cycquery-ops-conditionlessthan"]], "cycquery.ops.ConditionLike": [[35, "cycquery-ops-conditionlike"]], "cycquery.ops.ConditionRegexMatch": [[36, "cycquery-ops-conditionregexmatch"]], "cycquery.ops.ConditionStartsWith": [[37, "cycquery-ops-conditionstartswith"]], "cycquery.ops.ConditionSubstring": [[38, "cycquery-ops-conditionsubstring"]], "cycquery.ops.Count": [[39, "cycquery-ops-count"]], "cycquery.ops.Distinct": [[40, "cycquery-ops-distinct"]], "cycquery.ops.Drop": [[41, "cycquery-ops-drop"]], "cycquery.ops.DropEmpty": [[42, "cycquery-ops-dropempty"]], "cycquery.ops.DropNulls": [[43, "cycquery-ops-dropnulls"]], "cycquery.ops.ExtractTimestampComponent": [[44, "cycquery-ops-extracttimestampcomponent"]], "cycquery.ops.FillNull": [[45, "cycquery-ops-fillnull"]], "cycquery.ops.GroupByAggregate": [[46, "cycquery-ops-groupbyaggregate"]], "cycquery.ops.Join": [[47, "cycquery-ops-join"]], "cycquery.ops.Keep": [[48, "cycquery-ops-keep"]], "cycquery.ops.Limit": [[49, "cycquery-ops-limit"]], "cycquery.ops.Literal": [[50, "cycquery-ops-literal"]], "cycquery.ops.Or": [[51, "cycquery-ops-or"]], "cycquery.ops.OrderBy": [[52, "cycquery-ops-orderby"]], "cycquery.ops.QueryOp": [[53, "cycquery-ops-queryop"]], "cycquery.ops.RandomizeOrder": [[54, "cycquery-ops-randomizeorder"]], "cycquery.ops.Rename": [[55, "cycquery-ops-rename"]], "cycquery.ops.Reorder": [[56, "cycquery-ops-reorder"]], "cycquery.ops.ReorderAfter": [[57, "cycquery-ops-reorderafter"]], "cycquery.ops.Sequential": [[58, "cycquery-ops-sequential"]], "cycquery.ops.Substring": [[59, "cycquery-ops-substring"]], "cycquery.ops.Trim": [[60, "cycquery-ops-trim"]], "cycquery.ops.Union": [[61, "cycquery-ops-union"]], "dataset APIs": [[62, "dataset-apis"]], "eICU-CRD tutorial": [[64, "eICU-CRD-tutorial"]], "\ud83d\udc23 Getting Started": [[3, "getting-started"]], "\ud83d\udcda Documentation": [[3, "documentation"]], "\ud83e\uddd1\ud83c\udfff\u200d\ud83d\udcbb Developing": [[3, "developing"]]}, "docnames": ["api", "contributing", "index", "intro", "reference/api/_autosummary/cycquery.base", "reference/api/_autosummary/cycquery.base.DatasetQuerier", "reference/api/_autosummary/cycquery.eicu", "reference/api/_autosummary/cycquery.eicu.EICUQuerier", "reference/api/_autosummary/cycquery.gemini", "reference/api/_autosummary/cycquery.gemini.GEMINIQuerier", "reference/api/_autosummary/cycquery.interface", "reference/api/_autosummary/cycquery.interface.QueryInterface", "reference/api/_autosummary/cycquery.mimiciii", "reference/api/_autosummary/cycquery.mimiciii.MIMICIIIQuerier", "reference/api/_autosummary/cycquery.mimiciv", "reference/api/_autosummary/cycquery.mimiciv.MIMICIVQuerier", "reference/api/_autosummary/cycquery.omop", "reference/api/_autosummary/cycquery.omop.OMOPQuerier", "reference/api/_autosummary/cycquery.ops", "reference/api/_autosummary/cycquery.ops.AddColumn", "reference/api/_autosummary/cycquery.ops.AddDeltaColumn", "reference/api/_autosummary/cycquery.ops.AddDeltaConstant", "reference/api/_autosummary/cycquery.ops.AddNumeric", "reference/api/_autosummary/cycquery.ops.And", "reference/api/_autosummary/cycquery.ops.Apply", "reference/api/_autosummary/cycquery.ops.Cast", "reference/api/_autosummary/cycquery.ops.ConditionAfterDate", "reference/api/_autosummary/cycquery.ops.ConditionBeforeDate", "reference/api/_autosummary/cycquery.ops.ConditionEndsWith", "reference/api/_autosummary/cycquery.ops.ConditionEquals", "reference/api/_autosummary/cycquery.ops.ConditionGreaterThan", "reference/api/_autosummary/cycquery.ops.ConditionIn", "reference/api/_autosummary/cycquery.ops.ConditionInMonths", "reference/api/_autosummary/cycquery.ops.ConditionInYears", "reference/api/_autosummary/cycquery.ops.ConditionLessThan", "reference/api/_autosummary/cycquery.ops.ConditionLike", "reference/api/_autosummary/cycquery.ops.ConditionRegexMatch", "reference/api/_autosummary/cycquery.ops.ConditionStartsWith", "reference/api/_autosummary/cycquery.ops.ConditionSubstring", "reference/api/_autosummary/cycquery.ops.Count", "reference/api/_autosummary/cycquery.ops.Distinct", "reference/api/_autosummary/cycquery.ops.Drop", "reference/api/_autosummary/cycquery.ops.DropEmpty", "reference/api/_autosummary/cycquery.ops.DropNulls", "reference/api/_autosummary/cycquery.ops.ExtractTimestampComponent", "reference/api/_autosummary/cycquery.ops.FillNull", "reference/api/_autosummary/cycquery.ops.GroupByAggregate", "reference/api/_autosummary/cycquery.ops.Join", "reference/api/_autosummary/cycquery.ops.Keep", "reference/api/_autosummary/cycquery.ops.Limit", "reference/api/_autosummary/cycquery.ops.Literal", "reference/api/_autosummary/cycquery.ops.Or", "reference/api/_autosummary/cycquery.ops.OrderBy", "reference/api/_autosummary/cycquery.ops.QueryOp", "reference/api/_autosummary/cycquery.ops.RandomizeOrder", "reference/api/_autosummary/cycquery.ops.Rename", "reference/api/_autosummary/cycquery.ops.Reorder", "reference/api/_autosummary/cycquery.ops.ReorderAfter", "reference/api/_autosummary/cycquery.ops.Sequential", "reference/api/_autosummary/cycquery.ops.Substring", "reference/api/_autosummary/cycquery.ops.Trim", "reference/api/_autosummary/cycquery.ops.Union", "reference/api/cycquery", "tutorials", "tutorials/eicu", "tutorials/gemini", "tutorials/mimiciii", "tutorials/mimiciv", "tutorials/omop"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "contributing.rst", "index.rst", "intro.rst", "reference/api/_autosummary/cycquery.base.rst", "reference/api/_autosummary/cycquery.base.DatasetQuerier.rst", "reference/api/_autosummary/cycquery.eicu.rst", "reference/api/_autosummary/cycquery.eicu.EICUQuerier.rst", "reference/api/_autosummary/cycquery.gemini.rst", "reference/api/_autosummary/cycquery.gemini.GEMINIQuerier.rst", "reference/api/_autosummary/cycquery.interface.rst", "reference/api/_autosummary/cycquery.interface.QueryInterface.rst", "reference/api/_autosummary/cycquery.mimiciii.rst", "reference/api/_autosummary/cycquery.mimiciii.MIMICIIIQuerier.rst", "reference/api/_autosummary/cycquery.mimiciv.rst", "reference/api/_autosummary/cycquery.mimiciv.MIMICIVQuerier.rst", "reference/api/_autosummary/cycquery.omop.rst", "reference/api/_autosummary/cycquery.omop.OMOPQuerier.rst", "reference/api/_autosummary/cycquery.ops.rst", "reference/api/_autosummary/cycquery.ops.AddColumn.rst", "reference/api/_autosummary/cycquery.ops.AddDeltaColumn.rst", "reference/api/_autosummary/cycquery.ops.AddDeltaConstant.rst", "reference/api/_autosummary/cycquery.ops.AddNumeric.rst", "reference/api/_autosummary/cycquery.ops.And.rst", "reference/api/_autosummary/cycquery.ops.Apply.rst", "reference/api/_autosummary/cycquery.ops.Cast.rst", "reference/api/_autosummary/cycquery.ops.ConditionAfterDate.rst", "reference/api/_autosummary/cycquery.ops.ConditionBeforeDate.rst", "reference/api/_autosummary/cycquery.ops.ConditionEndsWith.rst", "reference/api/_autosummary/cycquery.ops.ConditionEquals.rst", "reference/api/_autosummary/cycquery.ops.ConditionGreaterThan.rst", "reference/api/_autosummary/cycquery.ops.ConditionIn.rst", "reference/api/_autosummary/cycquery.ops.ConditionInMonths.rst", "reference/api/_autosummary/cycquery.ops.ConditionInYears.rst", "reference/api/_autosummary/cycquery.ops.ConditionLessThan.rst", "reference/api/_autosummary/cycquery.ops.ConditionLike.rst", "reference/api/_autosummary/cycquery.ops.ConditionRegexMatch.rst", "reference/api/_autosummary/cycquery.ops.ConditionStartsWith.rst", "reference/api/_autosummary/cycquery.ops.ConditionSubstring.rst", "reference/api/_autosummary/cycquery.ops.Count.rst", "reference/api/_autosummary/cycquery.ops.Distinct.rst", "reference/api/_autosummary/cycquery.ops.Drop.rst", "reference/api/_autosummary/cycquery.ops.DropEmpty.rst", "reference/api/_autosummary/cycquery.ops.DropNulls.rst", "reference/api/_autosummary/cycquery.ops.ExtractTimestampComponent.rst", "reference/api/_autosummary/cycquery.ops.FillNull.rst", "reference/api/_autosummary/cycquery.ops.GroupByAggregate.rst", "reference/api/_autosummary/cycquery.ops.Join.rst", "reference/api/_autosummary/cycquery.ops.Keep.rst", "reference/api/_autosummary/cycquery.ops.Limit.rst", "reference/api/_autosummary/cycquery.ops.Literal.rst", "reference/api/_autosummary/cycquery.ops.Or.rst", "reference/api/_autosummary/cycquery.ops.OrderBy.rst", "reference/api/_autosummary/cycquery.ops.QueryOp.rst", "reference/api/_autosummary/cycquery.ops.RandomizeOrder.rst", "reference/api/_autosummary/cycquery.ops.Rename.rst", "reference/api/_autosummary/cycquery.ops.Reorder.rst", "reference/api/_autosummary/cycquery.ops.ReorderAfter.rst", "reference/api/_autosummary/cycquery.ops.Sequential.rst", "reference/api/_autosummary/cycquery.ops.Substring.rst", "reference/api/_autosummary/cycquery.ops.Trim.rst", "reference/api/_autosummary/cycquery.ops.Union.rst", "reference/api/cycquery.rst", "tutorials.rst", "tutorials/eicu.ipynb", "tutorials/gemini.ipynb", "tutorials/mimiciii.ipynb", "tutorials/mimiciv.ipynb", "tutorials/omop.ipynb"], "indexentries": {"__add__() (sequential method)": [[58, "cycquery.ops.Sequential.__add__", false]], "__call__() (addcolumn method)": [[19, "cycquery.ops.AddColumn.__call__", false]], "__call__() (adddeltacolumn method)": [[20, "cycquery.ops.AddDeltaColumn.__call__", false]], "__call__() (adddeltaconstant method)": [[21, "cycquery.ops.AddDeltaConstant.__call__", false]], "__call__() (addnumeric method)": [[22, "cycquery.ops.AddNumeric.__call__", false]], "__call__() (and method)": [[23, "cycquery.ops.And.__call__", false]], "__call__() (apply method)": [[24, "cycquery.ops.Apply.__call__", false]], "__call__() (cast method)": [[25, "cycquery.ops.Cast.__call__", false]], "__call__() (conditionafterdate method)": [[26, "cycquery.ops.ConditionAfterDate.__call__", false]], "__call__() (conditionbeforedate method)": [[27, "cycquery.ops.ConditionBeforeDate.__call__", false]], "__call__() (conditionendswith method)": [[28, "cycquery.ops.ConditionEndsWith.__call__", false]], "__call__() (conditionequals method)": [[29, "cycquery.ops.ConditionEquals.__call__", false]], "__call__() (conditiongreaterthan method)": [[30, "cycquery.ops.ConditionGreaterThan.__call__", false]], "__call__() (conditionin method)": [[31, "cycquery.ops.ConditionIn.__call__", false]], "__call__() (conditioninmonths method)": [[32, "cycquery.ops.ConditionInMonths.__call__", false]], "__call__() (conditioninyears method)": [[33, "cycquery.ops.ConditionInYears.__call__", false]], "__call__() (conditionlessthan method)": [[34, "cycquery.ops.ConditionLessThan.__call__", false]], "__call__() (conditionlike method)": [[35, "cycquery.ops.ConditionLike.__call__", false]], "__call__() (conditionregexmatch method)": [[36, "cycquery.ops.ConditionRegexMatch.__call__", false]], "__call__() (conditionstartswith method)": [[37, "cycquery.ops.ConditionStartsWith.__call__", false]], "__call__() (conditionsubstring method)": [[38, "cycquery.ops.ConditionSubstring.__call__", false]], "__call__() (count method)": [[39, "cycquery.ops.Count.__call__", false]], "__call__() (distinct method)": [[40, "cycquery.ops.Distinct.__call__", false]], "__call__() (drop method)": [[41, "cycquery.ops.Drop.__call__", false]], "__call__() (dropempty method)": [[42, "cycquery.ops.DropEmpty.__call__", false]], "__call__() (dropnulls method)": [[43, "cycquery.ops.DropNulls.__call__", false]], "__call__() (extracttimestampcomponent method)": [[44, "cycquery.ops.ExtractTimestampComponent.__call__", false]], "__call__() (fillnull method)": [[45, "cycquery.ops.FillNull.__call__", false]], "__call__() (groupbyaggregate method)": [[46, "cycquery.ops.GroupByAggregate.__call__", false]], "__call__() (join method)": [[47, "cycquery.ops.Join.__call__", false]], "__call__() (keep method)": [[48, "cycquery.ops.Keep.__call__", false]], "__call__() (limit method)": [[49, "cycquery.ops.Limit.__call__", false]], "__call__() (literal method)": [[50, "cycquery.ops.Literal.__call__", false]], "__call__() (or method)": [[51, "cycquery.ops.Or.__call__", false]], "__call__() (orderby method)": [[52, "cycquery.ops.OrderBy.__call__", false]], "__call__() (queryop method)": [[53, "cycquery.ops.QueryOp.__call__", false]], "__call__() (randomizeorder method)": [[54, "cycquery.ops.RandomizeOrder.__call__", false]], "__call__() (rename method)": [[55, "cycquery.ops.Rename.__call__", false]], "__call__() (reorder method)": [[56, "cycquery.ops.Reorder.__call__", false]], "__call__() (reorderafter method)": [[57, "cycquery.ops.ReorderAfter.__call__", false]], "__call__() (sequential method)": [[58, "cycquery.ops.Sequential.__call__", false]], "__call__() (substring method)": [[59, "cycquery.ops.Substring.__call__", false]], "__call__() (trim method)": [[60, "cycquery.ops.Trim.__call__", false]], "__call__() (union method)": [[61, "cycquery.ops.Union.__call__", false]], "__init__() (queryinterface method)": [[11, "cycquery.interface.QueryInterface.__init__", false]], "__init__() (sequential method)": [[58, "cycquery.ops.Sequential.__init__", false]], "addcolumn (class in cycquery.ops)": [[19, "cycquery.ops.AddColumn", false]], "adddeltacolumn (class in cycquery.ops)": [[20, "cycquery.ops.AddDeltaColumn", false]], "adddeltaconstant (class in cycquery.ops)": [[21, "cycquery.ops.AddDeltaConstant", false]], "addnumeric (class in cycquery.ops)": [[22, "cycquery.ops.AddNumeric", false]], "and (class in cycquery.ops)": [[23, "cycquery.ops.And", false]], "append() (sequential method)": [[58, "cycquery.ops.Sequential.append", false]], "apply (class in cycquery.ops)": [[24, "cycquery.ops.Apply", false]], "care_units() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.care_units", false]], "cast (class in cycquery.ops)": [[25, "cycquery.ops.Cast", false]], "chartevents() (mimiciiiquerier method)": [[13, "cycquery.mimiciii.MIMICIIIQuerier.chartevents", false]], "chartevents() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.chartevents", false]], "clear_data() (queryinterface method)": [[11, "cycquery.interface.QueryInterface.clear_data", false]], "conditionafterdate (class in cycquery.ops)": [[26, "cycquery.ops.ConditionAfterDate", false]], "conditionbeforedate (class in cycquery.ops)": [[27, "cycquery.ops.ConditionBeforeDate", false]], "conditionendswith (class in cycquery.ops)": [[28, "cycquery.ops.ConditionEndsWith", false]], "conditionequals (class in cycquery.ops)": [[29, "cycquery.ops.ConditionEquals", false]], "conditiongreaterthan (class in cycquery.ops)": [[30, "cycquery.ops.ConditionGreaterThan", false]], "conditionin (class in cycquery.ops)": [[31, "cycquery.ops.ConditionIn", false]], "conditioninmonths (class in cycquery.ops)": [[32, "cycquery.ops.ConditionInMonths", false]], "conditioninyears (class in cycquery.ops)": [[33, "cycquery.ops.ConditionInYears", false]], "conditionlessthan (class in cycquery.ops)": [[34, "cycquery.ops.ConditionLessThan", false]], "conditionlike (class in cycquery.ops)": [[35, "cycquery.ops.ConditionLike", false]], "conditionregexmatch (class in cycquery.ops)": [[36, "cycquery.ops.ConditionRegexMatch", false]], "conditionstartswith (class in cycquery.ops)": [[37, "cycquery.ops.ConditionStartsWith", false]], "conditionsubstring (class in cycquery.ops)": [[38, "cycquery.ops.ConditionSubstring", false]], "count (class in cycquery.ops)": [[39, "cycquery.ops.Count", false]], "cycquery": [[62, "module-cycquery", false]], "cycquery.base": [[4, "module-cycquery.base", false]], "cycquery.eicu": [[6, "module-cycquery.eicu", false]], "cycquery.gemini": [[8, "module-cycquery.gemini", false]], "cycquery.interface": [[10, "module-cycquery.interface", false]], "cycquery.mimiciii": [[12, "module-cycquery.mimiciii", false]], "cycquery.mimiciv": [[14, "module-cycquery.mimiciv", false]], "cycquery.omop": [[16, "module-cycquery.omop", false]], "cycquery.ops": [[18, "module-cycquery.ops", false]], "data (queryinterface property)": [[11, "cycquery.interface.QueryInterface.data", false]], "datasetquerier (class in cycquery.base)": [[5, "cycquery.base.DatasetQuerier", false]], "db (datasetquerier attribute)": [[5, "cycquery.base.DatasetQuerier.db", false]], "diagnoses() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.diagnoses", false]], "diagnoses() (mimiciiiquerier method)": [[13, "cycquery.mimiciii.MIMICIIIQuerier.diagnoses", false]], "diagnoses_icd() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.diagnoses_icd", false]], "distinct (class in cycquery.ops)": [[40, "cycquery.ops.Distinct", false]], "drop (class in cycquery.ops)": [[41, "cycquery.ops.Drop", false]], "dropempty (class in cycquery.ops)": [[42, "cycquery.ops.DropEmpty", false]], "dropnulls (class in cycquery.ops)": [[43, "cycquery.ops.DropNulls", false]], "eicuquerier (class in cycquery.eicu)": [[7, "cycquery.eicu.EICUQuerier", false]], "extend() (sequential method)": [[58, "cycquery.ops.Sequential.extend", false]], "extracttimestampcomponent (class in cycquery.ops)": [[44, "cycquery.ops.ExtractTimestampComponent", false]], "fillnull (class in cycquery.ops)": [[45, "cycquery.ops.FillNull", false]], "geminiquerier (class in cycquery.gemini)": [[9, "cycquery.gemini.GEMINIQuerier", false]], "get_table() (datasetquerier method)": [[5, "cycquery.base.DatasetQuerier.get_table", false]], "get_table() (eicuquerier method)": [[7, "cycquery.eicu.EICUQuerier.get_table", false]], "get_table() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.get_table", false]], "get_table() (mimiciiiquerier method)": [[13, "cycquery.mimiciii.MIMICIIIQuerier.get_table", false]], "get_table() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.get_table", false]], "get_table() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.get_table", false]], "groupbyaggregate (class in cycquery.ops)": [[46, "cycquery.ops.GroupByAggregate", false]], "imaging() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.imaging", false]], "insert() (sequential method)": [[58, "cycquery.ops.Sequential.insert", false]], "ip_admin() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.ip_admin", false]], "join (class in cycquery.ops)": [[47, "cycquery.ops.Join", false]], "join() (queryinterface method)": [[11, "cycquery.interface.QueryInterface.join", false]], "keep (class in cycquery.ops)": [[48, "cycquery.ops.Keep", false]], "labevents() (mimiciiiquerier method)": [[13, "cycquery.mimiciii.MIMICIIIQuerier.labevents", false]], "labevents() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.labevents", false]], "limit (class in cycquery.ops)": [[49, "cycquery.ops.Limit", false]], "list_columns() (datasetquerier method)": [[5, "cycquery.base.DatasetQuerier.list_columns", false]], "list_columns() (eicuquerier method)": [[7, "cycquery.eicu.EICUQuerier.list_columns", false]], "list_columns() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.list_columns", false]], "list_columns() (mimiciiiquerier method)": [[13, "cycquery.mimiciii.MIMICIIIQuerier.list_columns", false]], "list_columns() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.list_columns", false]], "list_columns() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.list_columns", false]], "list_custom_tables() (datasetquerier method)": [[5, "cycquery.base.DatasetQuerier.list_custom_tables", false]], "list_custom_tables() (eicuquerier method)": [[7, "cycquery.eicu.EICUQuerier.list_custom_tables", false]], "list_custom_tables() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.list_custom_tables", false]], "list_custom_tables() (mimiciiiquerier method)": [[13, "cycquery.mimiciii.MIMICIIIQuerier.list_custom_tables", false]], "list_custom_tables() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.list_custom_tables", false]], "list_custom_tables() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.list_custom_tables", false]], "list_schemas() (datasetquerier method)": [[5, "cycquery.base.DatasetQuerier.list_schemas", false]], "list_schemas() (eicuquerier method)": [[7, "cycquery.eicu.EICUQuerier.list_schemas", false]], "list_schemas() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.list_schemas", false]], "list_schemas() (mimiciiiquerier method)": [[13, "cycquery.mimiciii.MIMICIIIQuerier.list_schemas", false]], "list_schemas() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.list_schemas", false]], "list_schemas() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.list_schemas", false]], "list_tables() (datasetquerier method)": [[5, "cycquery.base.DatasetQuerier.list_tables", false]], "list_tables() (eicuquerier method)": [[7, "cycquery.eicu.EICUQuerier.list_tables", false]], "list_tables() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.list_tables", false]], "list_tables() (mimiciiiquerier method)": [[13, "cycquery.mimiciii.MIMICIIIQuerier.list_tables", false]], "list_tables() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.list_tables", false]], "list_tables() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.list_tables", false]], "literal (class in cycquery.ops)": [[50, "cycquery.ops.Literal", false]], "map_concept_ids_to_name() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.map_concept_ids_to_name", false]], "measurement() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.measurement", false]], "mimiciiiquerier (class in cycquery.mimiciii)": [[13, "cycquery.mimiciii.MIMICIIIQuerier", false]], "mimicivquerier (class in cycquery.mimiciv)": [[15, "cycquery.mimiciv.MIMICIVQuerier", false]], "module": [[4, "module-cycquery.base", false], [6, "module-cycquery.eicu", false], [8, "module-cycquery.gemini", false], [10, "module-cycquery.interface", false], [12, "module-cycquery.mimiciii", false], [14, "module-cycquery.mimiciv", false], [16, "module-cycquery.omop", false], [18, "module-cycquery.ops", false], [62, "module-cycquery", false]], "observation() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.observation", false]], "omopquerier (class in cycquery.omop)": [[17, "cycquery.omop.OMOPQuerier", false]], "ops() (queryinterface method)": [[11, "cycquery.interface.QueryInterface.ops", false]], "or (class in cycquery.ops)": [[51, "cycquery.ops.Or", false]], "orderby (class in cycquery.ops)": [[52, "cycquery.ops.OrderBy", false]], "patients() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.patients", false]], "person() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.person", false]], "pop() (sequential method)": [[58, "cycquery.ops.Sequential.pop", false]], "procedures_icd() (mimicivquerier method)": [[15, "cycquery.mimiciv.MIMICIVQuerier.procedures_icd", false]], "queryinterface (class in cycquery.interface)": [[11, "cycquery.interface.QueryInterface", false]], "queryop (class in cycquery.ops)": [[53, "cycquery.ops.QueryOp", false]], "randomizeorder (class in cycquery.ops)": [[54, "cycquery.ops.RandomizeOrder", false]], "rename (class in cycquery.ops)": [[55, "cycquery.ops.Rename", false]], "reorder (class in cycquery.ops)": [[56, "cycquery.ops.Reorder", false]], "reorderafter (class in cycquery.ops)": [[57, "cycquery.ops.ReorderAfter", false]], "room_transfer() (geminiquerier method)": [[9, "cycquery.gemini.GEMINIQuerier.room_transfer", false]], "run() (queryinterface method)": [[11, "cycquery.interface.QueryInterface.run", false]], "save() (queryinterface method)": [[11, "cycquery.interface.QueryInterface.save", false]], "sequential (class in cycquery.ops)": [[58, "cycquery.ops.Sequential", false]], "substring (class in cycquery.ops)": [[59, "cycquery.ops.Substring", false]], "trim (class in cycquery.ops)": [[60, "cycquery.ops.Trim", false]], "union (class in cycquery.ops)": [[61, "cycquery.ops.Union", false]], "union() (queryinterface method)": [[11, "cycquery.interface.QueryInterface.union", false]], "union_all() (queryinterface method)": [[11, "cycquery.interface.QueryInterface.union_all", false]], "visit_detail() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.visit_detail", false]], "visit_occurrence() (omopquerier method)": [[17, "cycquery.omop.OMOPQuerier.visit_occurrence", false]]}, "objects": {"": [[62, 0, 0, "-", "cycquery"]], "cycquery": [[4, 0, 0, "-", "base"], [6, 0, 0, "-", "eicu"], [8, 0, 0, "-", "gemini"], [10, 0, 0, "-", "interface"], [12, 0, 0, "-", "mimiciii"], [14, 0, 0, "-", "mimiciv"], [16, 0, 0, "-", "omop"], [18, 0, 0, "-", "ops"]], "cycquery.base": [[5, 1, 1, "", "DatasetQuerier"]], "cycquery.base.DatasetQuerier": [[5, 2, 1, "", "db"], [5, 3, 1, "", "get_table"], [5, 3, 1, "", "list_columns"], [5, 3, 1, "", "list_custom_tables"], [5, 3, 1, "", "list_schemas"], [5, 3, 1, "", "list_tables"]], "cycquery.eicu": [[7, 1, 1, "", "EICUQuerier"]], "cycquery.eicu.EICUQuerier": [[7, 3, 1, "", "get_table"], [7, 3, 1, "", "list_columns"], [7, 3, 1, "", "list_custom_tables"], [7, 3, 1, "", "list_schemas"], [7, 3, 1, "", "list_tables"]], "cycquery.gemini": [[9, 1, 1, "", "GEMINIQuerier"]], "cycquery.gemini.GEMINIQuerier": [[9, 3, 1, "", "care_units"], [9, 3, 1, "", "diagnoses"], [9, 3, 1, "", "get_table"], [9, 3, 1, "", "imaging"], [9, 3, 1, "", "ip_admin"], [9, 3, 1, "", "list_columns"], [9, 3, 1, "", "list_custom_tables"], [9, 3, 1, "", "list_schemas"], [9, 3, 1, "", "list_tables"], [9, 3, 1, "", "room_transfer"]], "cycquery.interface": [[11, 1, 1, "", "QueryInterface"]], "cycquery.interface.QueryInterface": [[11, 3, 1, "", "__init__"], [11, 3, 1, "", "clear_data"], [11, 4, 1, "", "data"], [11, 3, 1, "", "join"], [11, 3, 1, "", "ops"], [11, 3, 1, "", "run"], [11, 3, 1, "", "save"], [11, 3, 1, "", "union"], [11, 3, 1, "", "union_all"]], "cycquery.mimiciii": [[13, 1, 1, "", "MIMICIIIQuerier"]], "cycquery.mimiciii.MIMICIIIQuerier": [[13, 3, 1, "", "chartevents"], [13, 3, 1, "", "diagnoses"], [13, 3, 1, "", "get_table"], [13, 3, 1, "", "labevents"], [13, 3, 1, "", "list_columns"], [13, 3, 1, "", "list_custom_tables"], [13, 3, 1, "", "list_schemas"], [13, 3, 1, "", "list_tables"]], "cycquery.mimiciv": [[15, 1, 1, "", "MIMICIVQuerier"]], "cycquery.mimiciv.MIMICIVQuerier": [[15, 3, 1, "", "chartevents"], [15, 3, 1, "", "diagnoses_icd"], [15, 3, 1, "", "get_table"], [15, 3, 1, "", "labevents"], [15, 3, 1, "", "list_columns"], [15, 3, 1, "", "list_custom_tables"], [15, 3, 1, "", "list_schemas"], [15, 3, 1, "", "list_tables"], [15, 3, 1, "", "patients"], [15, 3, 1, "", "procedures_icd"]], "cycquery.omop": [[17, 1, 1, "", "OMOPQuerier"]], "cycquery.omop.OMOPQuerier": [[17, 3, 1, "", "get_table"], [17, 3, 1, "", "list_columns"], [17, 3, 1, "", "list_custom_tables"], [17, 3, 1, "", "list_schemas"], [17, 3, 1, "", "list_tables"], [17, 3, 1, "", "map_concept_ids_to_name"], [17, 3, 1, "", "measurement"], [17, 3, 1, "", "observation"], [17, 3, 1, "", "person"], [17, 3, 1, "", "visit_detail"], [17, 3, 1, "", "visit_occurrence"]], "cycquery.ops": [[19, 1, 1, "", "AddColumn"], [20, 1, 1, "", "AddDeltaColumn"], [21, 1, 1, "", "AddDeltaConstant"], [22, 1, 1, "", "AddNumeric"], [23, 1, 1, "", "And"], [24, 1, 1, "", "Apply"], [25, 1, 1, "", "Cast"], [26, 1, 1, "", "ConditionAfterDate"], [27, 1, 1, "", "ConditionBeforeDate"], [28, 1, 1, "", "ConditionEndsWith"], [29, 1, 1, "", "ConditionEquals"], [30, 1, 1, "", "ConditionGreaterThan"], [31, 1, 1, "", "ConditionIn"], [32, 1, 1, "", "ConditionInMonths"], [33, 1, 1, "", "ConditionInYears"], [34, 1, 1, "", "ConditionLessThan"], [35, 1, 1, "", "ConditionLike"], [36, 1, 1, "", "ConditionRegexMatch"], [37, 1, 1, "", "ConditionStartsWith"], [38, 1, 1, "", "ConditionSubstring"], [39, 1, 1, "", "Count"], [40, 1, 1, "", "Distinct"], [41, 1, 1, "", "Drop"], [42, 1, 1, "", "DropEmpty"], [43, 1, 1, "", "DropNulls"], [44, 1, 1, "", "ExtractTimestampComponent"], [45, 1, 1, "", "FillNull"], [46, 1, 1, "", "GroupByAggregate"], [47, 1, 1, "", "Join"], [48, 1, 1, "", "Keep"], [49, 1, 1, "", "Limit"], [50, 1, 1, "", "Literal"], [51, 1, 1, "", "Or"], [52, 1, 1, "", "OrderBy"], [53, 1, 1, "", "QueryOp"], [54, 1, 1, "", "RandomizeOrder"], [55, 1, 1, "", "Rename"], [56, 1, 1, "", "Reorder"], [57, 1, 1, "", "ReorderAfter"], [58, 1, 1, "", "Sequential"], [59, 1, 1, "", "Substring"], [60, 1, 1, "", "Trim"], [61, 1, 1, "", "Union"]], "cycquery.ops.AddColumn": [[19, 3, 1, "", "__call__"]], "cycquery.ops.AddDeltaColumn": [[20, 3, 1, "", "__call__"]], "cycquery.ops.AddDeltaConstant": [[21, 3, 1, "", "__call__"]], "cycquery.ops.AddNumeric": [[22, 3, 1, "", "__call__"]], "cycquery.ops.And": [[23, 3, 1, "", "__call__"]], "cycquery.ops.Apply": [[24, 3, 1, "", "__call__"]], "cycquery.ops.Cast": [[25, 3, 1, "", "__call__"]], "cycquery.ops.ConditionAfterDate": [[26, 3, 1, "", "__call__"]], "cycquery.ops.ConditionBeforeDate": [[27, 3, 1, "", "__call__"]], "cycquery.ops.ConditionEndsWith": [[28, 3, 1, "", "__call__"]], "cycquery.ops.ConditionEquals": [[29, 3, 1, "", "__call__"]], "cycquery.ops.ConditionGreaterThan": [[30, 3, 1, "", "__call__"]], "cycquery.ops.ConditionIn": [[31, 3, 1, "", "__call__"]], "cycquery.ops.ConditionInMonths": [[32, 3, 1, "", "__call__"]], "cycquery.ops.ConditionInYears": [[33, 3, 1, "", "__call__"]], "cycquery.ops.ConditionLessThan": [[34, 3, 1, "", "__call__"]], "cycquery.ops.ConditionLike": [[35, 3, 1, "", "__call__"]], "cycquery.ops.ConditionRegexMatch": [[36, 3, 1, "", "__call__"]], "cycquery.ops.ConditionStartsWith": [[37, 3, 1, "", "__call__"]], "cycquery.ops.ConditionSubstring": [[38, 3, 1, "", "__call__"]], "cycquery.ops.Count": [[39, 3, 1, "", "__call__"]], "cycquery.ops.Distinct": [[40, 3, 1, "", "__call__"]], "cycquery.ops.Drop": [[41, 3, 1, "", "__call__"]], "cycquery.ops.DropEmpty": [[42, 3, 1, "", "__call__"]], "cycquery.ops.DropNulls": [[43, 3, 1, "", "__call__"]], "cycquery.ops.ExtractTimestampComponent": [[44, 3, 1, "", "__call__"]], "cycquery.ops.FillNull": [[45, 3, 1, "", "__call__"]], "cycquery.ops.GroupByAggregate": [[46, 3, 1, "", "__call__"]], "cycquery.ops.Join": [[47, 3, 1, "", "__call__"]], "cycquery.ops.Keep": [[48, 3, 1, "", "__call__"]], "cycquery.ops.Limit": [[49, 3, 1, "", "__call__"]], "cycquery.ops.Literal": [[50, 3, 1, "", "__call__"]], "cycquery.ops.Or": [[51, 3, 1, "", "__call__"]], "cycquery.ops.OrderBy": [[52, 3, 1, "", "__call__"]], "cycquery.ops.QueryOp": [[53, 3, 1, "", "__call__"]], "cycquery.ops.RandomizeOrder": [[54, 3, 1, "", "__call__"]], "cycquery.ops.Rename": [[55, 3, 1, "", "__call__"]], "cycquery.ops.Reorder": [[56, 3, 1, "", "__call__"]], "cycquery.ops.ReorderAfter": [[57, 3, 1, "", "__call__"]], "cycquery.ops.Sequential": [[58, 3, 1, "", "__add__"], [58, 3, 1, "", "__call__"], [58, 3, 1, "", "__init__"], [58, 3, 1, "", "append"], [58, 3, 1, "", "extend"], [58, 3, 1, "", "insert"], [58, 3, 1, "", "pop"]], "cycquery.ops.Substring": [[59, 3, 1, "", "__call__"]], "cycquery.ops.Trim": [[60, 3, 1, "", "__call__"]], "cycquery.ops.Union": [[61, 3, 1, "", "__call__"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property"}, "terms": {"": [5, 11, 17, 24, 45, 64, 65, 66, 67, 68], "0": [14, 45, 59, 64, 65, 66, 67, 68], "006": 64, "007": 64, "01": [26, 27, 65, 67, 68], "013163": 67, "02": 67, "03": [65, 67], "04": 65, "05": [64, 65, 66, 67, 68], "085604": 67, "086": 66, "09": [65, 66], "093352": 65, "1": [3, 11, 21, 22, 24, 26, 27, 29, 30, 31, 32, 34, 45, 50, 63], "10": [49, 63, 68], "100": [63, 66, 67, 68], "1000": 67, "1000000": 11, "101": 63, "109": 66, "11": 68, "111": 66, "119": 68, "12": 68, "122": 68, "129879": 66, "13": 68, "139": 64, "145693": 65, "15": 68, "16": [64, 66], "165": 68, "167": 68, "17": [65, 66], "188826": 64, "189734": 65, "19": [64, 65, 66, 67, 68], "198764": 66, "1a": 63, "1b": 63, "1c": 63, "2": [3, 14, 22, 24, 31, 32, 59, 63, 65], "20": 63, "2009": 63, "2010": 63, "2011": 68, "2012": 68, "2013": 68, "2014": [63, 68], "2015": [63, 68], "2016": [63, 68], "2017": 68, "2018": 68, "2019": [33, 68], "2020": [26, 27, 33, 63], "2021": [63, 68], "2022": 68, "2023": [65, 68], "2024": [64, 66, 67, 68], "202540": 66, "21": [64, 65, 66, 67, 68], "211": 68, "236": 67, "237": 67, "24": [66, 67], "26": [65, 67, 68], "271": 67, "273": 67, "28": 67, "284": 68, "286": 68, "29": 68, "291": 66, "293": 66, "2a": 63, "3": [63, 65, 68], "31": [63, 67], "313": 67, "315": 67, "32567": 65, "388764": 64, "39": [64, 65, 66, 67, 68], "4": [63, 65, 68], "40": 67, "405465": 68, "408739": 67, "416864": 67, "419": 66, "421663": 64, "434": 64, "435": 64, "44": 67, "449": 65, "45": 65, "460": 67, "461": 67, "48": [67, 68], "480029": 67, "49": 64, "5": [63, 64, 65, 66, 68], "503151": 66, "506": 65, "51": [65, 68], "513433": 67, "518507": 64, "52": [64, 65], "53": [64, 67], "538": 66, "540": 66, "541": 64, "542": 64, "5432": [3, 17, 64, 66, 67, 68], "55": 64, "5815": 68, "589942": 68, "59": 68, "591": 65, "592": 65, "6": [63, 65, 66, 68], "637": 68, "675141": 65, "68": 67, "7": [63, 65, 68], "712": 67, "721": 67, "723": 67, "755": 67, "757": 67, "759275": 67, "781": 67, "783": 67, "8": [63, 68], "812": 68, "814": 65, "815": 65, "82": 67, "856": 65, "857": 65, "880585": 67, "899": 68, "9": 63, "901": 68, "902": 65, "903": 65, "913944": 68, "9305": 65, "939296": 65, "960": 66, "968507": 68, "975": 67, "977": 67, "991": 64, "993": 64, "999": 67, "A": [10, 11, 21, 26, 27, 47], "And": [0, 67], "For": [1, 17], "If": [1, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 45, 46, 47, 52, 60], "In": 3, "It": [3, 24, 63], "No": [11, 68], "Not": 5, "OR": 51, "Or": 0, "The": [1, 3, 5, 11, 15, 20, 24, 48, 62, 63, 64, 66, 67, 68], "To": 1, "__add__": [0, 58], "__call__": [0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "__init__": [0, 11, 58], "aado2": 63, "abov": 63, "abstract": 53, "accord": [17, 64, 66, 67, 68], "accordingli": [64, 66, 67, 68], "activ": 3, "ad": [11, 19, 20, 21, 22, 58], "add": [19, 20, 21, 22, 50, 58], "add_to": [19, 20, 21, 22], "addcolumn": 0, "adddeltacolumn": [0, 67], "adddeltaconst": 0, "addnumer": 0, "address": 5, "adjust": 15, "admdad": 65, "admiss": [63, 66], "admissiondrug": 64, "admissiondx": 64, "admittim": 67, "admitting_concept_id": 68, "advanc": 63, "after": [5, 15, 24, 26, 57, 58, 63], "aggfunc": 46, "aggreg": [3, 46], "aggsep": 46, "all": [1, 3, 11, 38, 52, 55, 61, 63, 65], "all_visit": 68, "allergi": 64, "allow": [5, 7, 9, 13, 15, 17, 63], "along": 1, "also": 24, "an": [1, 9, 11, 13, 15, 17, 20, 23, 47, 51, 55], "analysi": 1, "analyz": 54, "anchor_year": 15, "anchor_year_differ": 67, "anchor_year_group": 15, "ani": [11, 20, 28, 29, 30, 31, 34, 37, 38, 45, 50], "anoth": [11, 47, 55, 58], "any_": 38, "apacheapsvar": 64, "apachepatientresult": 64, "apachepredvar": 64, "api": [2, 3, 5, 7, 9, 13, 15, 16, 17, 63], "append": [0, 58], "appli": [0, 1, 15, 19, 20, 21, 22, 60], "approx": 63, "approxim": 15, "apr": 63, "april": 63, "ar": [5, 15, 24, 47], "arg": [53, 54, 58], "argument": [20, 28, 29, 30, 31, 34, 37, 38], "around": [3, 63], "ascend": [52, 65], "assign": 17, "assign_all_visit_id": 68, "assum": [24, 64, 66, 67, 68], "attent": 19, "attribut": 11, "automat": 5, "b": 38, "backend": 11, "base": [0, 3, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "batch": [11, 63], "batch_mod": [11, 67], "batch_siz": [11, 67], "becom": [11, 54], "befor": [1, 27, 47], "being": [19, 20, 21, 22, 26, 27, 29, 32, 33], "between": 63, "bin": 3, "binarize_col": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "binaryexpress": [11, 47], "black": 1, "bodi": 68, "bool": [5, 7, 9, 11, 13, 15, 17, 19, 20, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 47, 51, 52, 55, 61], "boolean": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "both": 47, "build": [5, 63], "built": 3, "ca": 65, "call": 53, "callabl": 24, "can": [1, 3, 5, 7, 9, 13, 15, 17, 24, 38], "cannot": 54, "care": [9, 15], "care_sit": 68, "care_unit": [0, 9], "careplancareprovid": 64, "careplaneol": 64, "careplangener": 64, "careplango": 64, "careplaninfectiousdiseas": 64, "carevu": 63, "cartesian": 47, "cast": [0, 5, 7, 9, 11, 13, 15, 17, 65, 67], "cast_timestamp_col": [5, 7, 9, 13, 15, 17], "categori": 67, "cd": 3, "cdm_sourc": 68, "cdm_synthea10": 68, "certain": 54, "chain": [11, 58], "chart": [15, 63], "chart_ev": [66, 67], "chartev": [0, 13, 15, 66, 67], "chartevents_op": 66, "check": [1, 55], "check_exist": 55, "chronic": 63, "class": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "clear": 11, "clear_data": [0, 11], "code": [2, 64, 66, 67, 68], "codestyl": 3, "cohort": 68, "cohort_definit": 68, "col": [19, 24, 25, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 50, 52, 56, 57, 59, 60], "col1": [3, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 50, 52, 55, 56, 57, 58, 59, 60], "col1_bool": [26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38], "col1_new": [24, 45, 55], "col1_plus_1": [21, 22], "col1_plus_col2": [19, 20], "col1_plus_col3": 19, "col1_substr": 59, "col1_trim": 60, "col2": [3, 19, 20, 21, 22, 24, 25, 41, 42, 43, 45, 47, 48, 52, 56, 57, 58, 60], "col2_new": [24, 45], "col2_plus_1": 22, "col2_plus_col3": 19, "col2_trim": 60, "col3": [3, 19, 20, 47, 57], "collection_date_tim": 65, "column": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 55, 56, 57, 59, 60], "combin": [19, 23, 51], "come": 57, "commit": 2, "common": 68, "commun": 63, "complet": 56, "compon": 44, "comput": 11, "concept": [17, 68], "concept_ancestor": 68, "concept_class": 68, "concept_relationship": 68, "concept_synonym": 68, "cond": [11, 47], "cond_kwarg": [28, 29, 30, 31, 34, 37, 38], "cond_op": [23, 51], "condit": [3, 11, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 47, 51, 68], "condition_concept_id": 68, "condition_concept_nam": 68, "condition_era": 68, "condition_occurr": 68, "conditionafterd": [0, 65, 67, 68], "conditionbefored": [0, 65], "conditionendswith": 0, "conditionequ": [0, 64, 65, 66, 67], "conditiongreaterthan": 0, "conditionin": [0, 3, 23, 51], "conditioninmonth": 0, "conditioninyear": [0, 67], "conditionlessthan": [0, 66], "conditionlik": [0, 23, 51, 67], "conditionregexmatch": [0, 63], "conditionstartswith": 0, "conditionsubstr": [0, 3, 64, 65, 66, 67, 68], "config": [64, 66, 67, 68], "consid": 17, "construct": [9, 13, 15, 17, 20, 21], "contain": [11, 63], "contribut": 2, "convers": 25, "convert": [25, 47], "correspond": [17, 42, 43], "cost": 68, "count": [0, 46, 65, 68], "crd": [2, 6, 63], "creat": [3, 5, 11, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 60, 63], "csv": [11, 68], "current": 25, "custom": [5, 7, 9, 13, 15, 17, 66], "customlab": 64, "cycqueri": [0, 63, 64, 65, 66, 68], "d": 3, "dai": 21, "dask": 11, "data": [0, 3, 9, 11, 13, 15, 54, 67, 68], "databas": [2, 5, 7, 9, 10, 11, 13, 15, 17, 62, 63, 64, 65, 66, 67, 68], "dataclass": 11, "datafram": [3, 11], "dataset": [0, 5, 7, 9, 11, 13, 15, 17, 63], "datasetqueri": [0, 3, 7, 9, 13, 15, 17], "date": [25, 26, 27], "datetim": [5, 7, 9, 13, 15, 17, 21, 26, 27], "db": [0, 5, 65, 67], "dbm": [3, 5, 7, 9, 13, 15, 17, 64, 66, 67, 68], "dbname": 3, "dbsourc": 66, "dbtabl": [11, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61], "dd": [26, 27], "death": 68, "default": [5, 11, 37], "defin": 11, "delirium_v4_0_1": 65, "delta": 21, "delta_kwarg": 20, "depend": 3, "derived_vari": 65, "descend": 52, "develop": 2, "device_exposur": 68, "df": 3, "di": 68, "diagnos": [0, 9, 13, 63], "diagnoses_icd": [0, 15, 67], "diagnoses_op": 67, "diagnosi": [9, 13, 15, 64], "diagnosisstr": 63, "dict": [46, 55], "dictionari": 46, "differ": [38, 47], "disabl": 24, "discharg": 63, "discharge_date_tim": 63, "discharge_to_concept_id": 68, "discharge_to_concept_nam": 68, "dischtim": 67, "distinct": [0, 3, 65], "doc": 3, "docstr": 1, "dod": 15, "domain": 68, "don": 1, "dose_era": 68, "downstream": [5, 7, 9, 13, 15, 17], "drop": [0, 58], "dropempti": [0, 65], "dropnul": [0, 3], "drug_era": 68, "drug_exposur": 68, "drug_strength": 68, "drugnam": 64, "dst_col": 17, "dt": 68, "dtype": 68, "dtype_backend": 11, "e": [3, 5, 44, 47, 50], "e501": 24, "each": [17, 24, 52, 63, 64, 66, 67, 68], "ehr": [3, 5, 62, 63, 68], "eicu": [0, 2, 63], "eicu_crd": 64, "eicuqueri": [0, 63], "electron": 3, "empti": [5, 42], "encount": [9, 63], "encounters_lab": 65, "encounters_per_sit": 65, "encounters_queri": 65, "end": [28, 58, 63], "env": 3, "environ": [1, 3], "episod": 68, "episode_ev": 68, "equal": [29, 30, 34], "er": 65, "erdiagnosi": 65, "erintervent": 65, "error": 1, "etl": 68, "event": [15, 63], "exampl": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63], "execut": [58, 64, 65, 66, 67, 68], "exist": [19, 20, 21, 22, 55, 60], "expens": 47, "expire_flag": 66, "express": 36, "extend": [0, 58], "extract": [44, 59, 64, 65, 66, 67, 68], "extract_str": 44, "extracttimestampcompon": 0, "f": [64, 65, 66, 67, 68], "fact_relationship": 68, "fals": [11, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 47, 51, 52, 61, 65], "femal": 63, "fetch": [9, 11], "fhir_etl": 67, "fhir_trm": 67, "file": [1, 5, 11], "file_format": 11, "fill": [1, 45], "fill_valu": 45, "fillnul": 0, "filter": [3, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 47, 51, 63], "final": 58, "final_visit_id": 68, "finish": [64, 65, 66, 67, 68], "first": [61, 64, 66, 67, 68], "fix": 1, "flag": 47, "float": [22, 25], "follow": [57, 68], "forget": 1, "format": [1, 11, 26, 27, 47, 68], "framework": 11, "from": [3, 9, 11, 15, 17, 44, 47, 55, 60, 63, 64, 66, 68], "func": 24, "function": [15, 19, 20, 21, 22, 24, 46, 53, 60, 63, 64, 65, 66, 67, 68], "further": 1, "g": [3, 5, 44, 47, 50], "gastroenter": 63, "gemini": [0, 2, 63], "geminiqueri": [0, 63], "genc_id": 65, "gender": [64, 66, 67], "gender_concept_nam": 68, "gener": [11, 68], "get": [2, 5, 7, 9, 11, 13, 15, 17, 40, 59, 63], "get_tabl": [0, 5, 7, 9, 13, 15, 17], "given": [45, 58], "glucos": 63, "googl": 1, "greater": [30, 34], "group": 46, "groupbi": 3, "groupby_col": 46, "groupbyaggreg": [0, 65], "guid": 1, "guidelin": [2, 3], "ha": 59, "hadm_id": [66, 67], "have": [5, 7, 9, 13, 15, 17, 31, 38, 47, 63], "hba1c": [23, 35, 51], "health": 3, "hemoglobin": 63, "henc": 3, "hint": 1, "hook": 2, "hospit": [15, 63], "hospital_num": 65, "hospitaldischargeyear": 64, "hospitalid": 64, "host": [3, 5, 7, 9, 13, 15, 17, 64, 65, 66, 67, 68], "hous": 68, "how": [63, 64, 66, 67, 68], "hpc": 65, "html": 3, "i": [1, 3, 5, 11, 15, 17, 19, 20, 21, 22, 24, 38, 42, 43, 47, 54, 63, 64, 66, 67, 68], "icd": 63, "icd_vers": 67, "icu": 15, "id": 17, "iii": [2, 12, 13, 63, 68], "imag": [0, 9], "implement": 53, "import": [3, 63], "includ": [3, 30, 34], "index": [11, 58, 59, 63], "index_col": [11, 67], "infecti": 63, "infer": 15, "info": [3, 9, 64, 65, 66, 67, 68], "inform": 44, "information_schema": [67, 68], "infusiondrug": 64, "initi": [11, 58], "input": 24, "insert": [0, 58], "instal": 2, "instanti": [5, 63], "instead": [23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 51], "instruct": [64, 66, 67, 68], "int": [5, 11, 22, 25, 32, 33, 47, 49, 58, 59], "int64": 68, "intakeoutput": 64, "integ": 50, "integr": 3, "intend": 5, "interest": 1, "interfac": [0, 9, 13, 15, 17], "interv": 20, "ip_admin": [0, 9], "ipdiagnosi": 65, "ipintervent": 65, "ipscu": 65, "isout": [11, 47, 68], "issu": 1, "iv": [2, 14, 63], "jane": [23, 51], "john": [23, 51], "join": [0, 3, 11, 15, 64, 65, 66, 67, 68], "join_tabl": [11, 47, 64, 66, 67, 68], "join_table_col": [11, 47], "just": 38, "keep": [0, 47, 63], "kei": [46, 55, 58], "keyword": [28, 29, 30, 31, 34, 37, 38, 61, 63], "kwarg": [53, 54], "lab": [15, 63, 65], "lab_nam": [23, 35, 46, 51], "lab_name_agg": 46, "lab_name_bool": 35, "lab_op": 65, "label": [19, 20, 21, 22, 44, 46, 50, 60, 66, 67], "labev": [0, 13, 15, 66], "labnam": 64, "lambda": 24, "larg": 54, "last": 1, "later": 63, "least": 1, "left": 47, "len": [64, 65, 66, 67, 68], "less": [34, 63], "like": [3, 17, 35], "limit": [0, 11, 54, 63, 66, 67, 68], "line": 24, "link": 1, "list": [3, 5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 24, 25, 31, 32, 33, 38, 40, 41, 42, 43, 45, 46, 47, 48, 51, 52, 56, 57, 58, 60, 64, 65, 66, 67, 68], "list_column": [0, 5, 7, 9, 13, 15, 17], "list_custom_t": [0, 5, 7, 9, 13, 15, 17, 66], "list_schema": [0, 5, 7, 9, 13, 15, 17, 67, 68], "list_tabl": [0, 3, 5, 7, 9, 13, 15, 17, 64, 65, 68], "liter": [0, 11], "load": 68, "local": 3, "localhost": [3, 17, 64, 66, 67, 68], "locality_vari": 65, "locat": 68, "long": [24, 63], "long_titl": [66, 67], "lookup_cci": 65, "lookup_ccsr": 65, "lookup_diagnosi": 65, "lookup_er_administr": 65, "lookup_hospital_num": 65, "lookup_icd10_ca_descript": 65, "lookup_icd10_ca_to_ccsr": 65, "lookup_imag": 65, "lookup_ip_administr": 65, "lookup_ip_scu": 65, "lookup_lab_concept": 65, "lookup_pharmacy_concept": 65, "lookup_pharmacy_rout": 65, "lookup_phy_characterist": 65, "lookup_room_transf": 65, "lookup_statcan": 65, "lookup_transf": 65, "lookup_transfusion_concept": 65, "lookup_vitals_concept": 65, "lymphadenopathi": 63, "m": [3, 66], "mai": 63, "make": [3, 38], "male": 63, "manag": 5, "mani": [3, 63], "map": [5, 7, 9, 13, 15, 17, 55], "map_concept_ids_to_nam": [0, 17, 68], "march": 63, "match": [3, 36, 68], "measur": [0, 17, 63], "measurement_concept_nam": 68, "medic": 63, "metadata": 68, "method": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66], "microlab": 64, "million": 11, "mimic": [2, 12, 13, 14, 15, 63, 68], "mimic_fhir": 67, "mimiciii": [0, 66, 68], "mimiciiiqueri": [0, 63, 68], "mimiciv": [0, 67], "mimiciv_": 67, "mimiciv_deriv": 67, "mimiciv_hosp": 67, "mimiciv_icu": 67, "mimiciv_not": 67, "mimicivqueri": [0, 63], "mm": [26, 27], "mode": 11, "model": 68, "modul": [6, 8, 12, 14, 15], "month": [32, 44], "more": 3, "mortal": 63, "most": 63, "multipl": [9, 23, 24, 46, 51], "must": [25, 31, 32, 33, 38, 46], "mypi": 1, "mysql": 5, "name": [5, 7, 9, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 45, 46, 47, 51, 55, 56, 57, 59, 68], "nbsphinx_allow_error": 3, "need": [1, 59], "neg": [19, 20], "negat": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "neither": 47, "new": [19, 20, 21, 22, 24, 45, 46, 50, 56, 59, 60], "new_col": 24, "new_col_label": [19, 20, 21, 22, 59, 60], "new_col_nam": [45, 59], "next": 67, "none": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 45, 46, 47, 52, 59, 60], "noqa": 24, "nor": 47, "not_": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "note": [5, 15, 64, 68], "note_nlp": 68, "notebook": [64, 65, 66, 67, 68], "null": [43, 45], "number": [5, 39, 49, 57, 63], "numer": 22, "numpi": 1, "nurseassess": 64, "nursecar": 64, "nursechart": 64, "object": [5, 9, 10, 11, 13, 15, 17, 20, 21, 24, 26, 27, 46, 53, 58, 63], "observ": [0, 17, 68], "observation_period": 68, "occur": 63, "omop": [0, 2, 63], "omopqueri": [0, 63], "on_to_typ": [11, 47], "onc": 1, "one": [38, 63], "onli": [38, 47, 48, 63], "op": [0, 3, 11, 15, 63, 64, 65, 66, 68], "op_": 58, "oper": [3, 11, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "oppos": 47, "option": [5, 7, 9, 11, 13, 15, 17, 19, 20, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 46, 47, 61], "order": [3, 11, 52, 54, 56, 57], "orderbi": [0, 65], "ordereddict": 58, "origin": 11, "orm": [5, 11, 63, 64, 65, 66, 67, 68], "other": [11, 19, 57, 58], "otherwis": [19, 20, 21, 22, 60], "our": 1, "out": 1, "outcom": 63, "outer": [11, 47], "over": 46, "pai": 19, "pair": 46, "panda": [3, 11, 68], "paramet": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68], "parquet": 11, "partit": [11, 63], "pass": [64, 66, 67, 68], "password": [3, 5, 7, 9, 13, 15, 17, 64, 65, 66, 67, 68], "pasthistori": 64, "path": [3, 5, 11], "patient": [0, 9, 15, 63], "patient_admiss": [66, 67], "patient_admissions_df": 67, "patient_admissions_diagnos": [66, 67], "patient_admissions_lab": 67, "patient_admissions_radiology_not": 67, "patient_admissions_vit": 67, "patient_chart_ev": 66, "patient_diagnos": 64, "patient_id_hash": 63, "patient_lab": [64, 66], "patient_med": 64, "patientunitstayid": 64, "pattern": 35, "payer_plan_period": 68, "pd": 68, "per": 63, "perform": [3, 11, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 68], "person": [0, 17, 68], "person_id": [39, 40, 46, 68], "person_visit": 68, "person_visits_condit": 68, "person_visits_conditions_measur": 68, "pharmaci": 65, "physicalexam": 64, "pip": 2, "place": 63, "pleas": 1, "poetri": 2, "pop": [0, 58], "port": [3, 5, 7, 9, 13, 15, 17, 64, 66, 67, 68], "possibli": [5, 7, 9, 13, 15, 17], "postgr": [64, 66, 67, 68], "postgresql": [2, 5, 17, 63, 64, 66, 67, 68], "potassium": 63, "pr": 1, "pre": 2, "prevent": 46, "print": [64, 65, 66, 67, 68], "procedur": 15, "procedure_occurr": 68, "procedures_icd": [0, 15], "process": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61], "product": 47, "profil": [64, 65, 66, 67, 68], "properti": 11, "provid": [5, 7, 9, 13, 15, 17, 24, 38, 45, 46, 52, 62, 68], "public": [65, 67, 68], "pwd": [5, 64, 66, 67, 68], "pyarrow": [11, 68], "pylint": 24, "python": [1, 3, 63], "python3": 3, "qo": [3, 64, 65, 66, 67, 68], "queri": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 49, 51, 53, 58, 62, 63, 64, 65, 66, 67, 68], "querier": [3, 4, 7, 9, 13, 15, 17, 64, 65, 66, 67, 68], "queryinterfac": [0, 9, 13, 15, 17], "queryop": [0, 11, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61], "quick": [64, 66, 67, 68], "quit": 54, "r": 67, "radiologi": [63, 65], "radiology_not": 67, "radiology_notes_op": 67, "random": 54, "randomizeord": 0, "rather": [19, 20], "raw": 63, "readi": [64, 65, 66, 67, 68], "receiv": 15, "recent": 63, "recogn": [5, 7, 9, 13, 15, 17], "recommend": 1, "record": [3, 63], "refer": 2, "regex": 36, "regular": 36, "relat": 3, "relationship": 68, "releas": 68, "remov": [42, 43], "renam": 0, "rename_map": 55, "reorder": [0, 57], "reorderaft": 0, "repo": 68, "report": [9, 63], "repres": 47, "respiratorycar": 64, "respiratorychart": 64, "result": [11, 58, 64, 66, 67, 68], "return": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68], "return_cond": [23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 51], "room": 9, "room_transf": [0, 9], "roomtransf": 65, "routin": 63, "row": [11, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 49, 52, 54, 63, 65, 66, 67, 68], "ruff": 1, "run": [0, 1, 3, 5, 11, 63, 64, 65, 66, 68], "run_queri": [64, 65, 66, 67, 68], "sai": 47, "same": [46, 47], "save": [0, 11], "schema": [3, 5, 7, 9, 13, 15, 17, 67, 68], "schema_nam": [5, 7, 9, 13, 15, 17, 68], "schizophrenia": 63, "search": 63, "see": 3, "seen": 54, "select": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 67], "self": 5, "separ": 46, "sepsi": 63, "sequenc": [46, 58], "sequenti": [0, 3, 11, 64, 65, 66, 67, 68], "server": 11, "set": [3, 11, 63], "setup": [1, 64, 65, 66, 67, 68], "should": 11, "show": [1, 64, 65, 66, 67, 68], "showcas": 68, "sign": 63, "simpl": 3, "singl": 24, "size": 11, "slice": 58, "slow": 54, "so": 54, "sodium": 63, "sodium_test": 65, "some": [3, 19, 20, 21, 22, 26, 27, 28, 29, 30, 34, 37, 41, 42, 43, 52, 55, 60], "somecol_concept_id": 17, "somecol_concept_nam": 17, "somet": 3, "sort": [52, 63], "sort_index": 68, "sourc": [3, 5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "source_to_concept_map": 68, "source_to_source_vocab_map": 68, "source_to_standard_vocab_map": 68, "specif": 3, "specifi": [17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 46, 47, 48, 57, 60], "specimen": 68, "sphinx": 3, "sphinxopt": 3, "sql": [3, 5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 63], "sqlalchemi": [3, 5, 7, 9, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 63], "sqlite": 5, "src_col": 17, "src_tabl": 17, "standard": [5, 7, 9, 13, 15, 17], "start": [2, 37, 59], "start_index": 59, "static": 1, "stop": 59, "stop_index": 59, "str": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 55, 56, 57, 58, 59, 60, 67], "string": [28, 37, 46, 47, 50, 59, 60, 63], "string_agg": 46, "string_aggfunc": 46, "style": [1, 47], "subclass": 5, "subject_id": [63, 66], "submit": 1, "subqueri": [5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "subset": 63, "substr": [0, 3, 38, 63], "subtract": [19, 20], "successfulli": [64, 65, 66, 67, 68], "suggest": 47, "suppli": 15, "support": [6, 12, 14, 25], "sure": 3, "synthea": 68, "synthea_integration_test": 68, "system": 5, "t": 1, "tabl": [3, 5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68], "table1": [47, 61], "table2": [47, 61], "table_col": [11, 47], "table_nam": [5, 7, 9, 13, 15, 17], "take": [24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 63], "teach": 63, "teachingstatu": 64, "temperatur": 68, "templat": 1, "test": [3, 63], "test_type_map": 65, "text": 67, "than": [19, 20, 30, 34, 63], "thank": 1, "them": 11, "thi": [5, 22, 38, 46, 47, 64, 65, 66, 67, 68], "thu": 11, "time": 44, "timedelta": 21, "timestamp": [5, 7, 9, 13, 15, 17, 25, 26, 27, 32, 33, 44, 65], "timestamp_col": [26, 27, 32, 33, 44], "titl": 63, "to_datetim": 68, "togeth": 63, "too": 24, "tool": [1, 3, 63, 64, 65, 66, 67, 68], "total": 63, "transfer": 9, "transfus": 65, "treatment": 64, "trim": 0, "true": [3, 5, 7, 9, 11, 13, 15, 17, 19, 20, 35, 38, 52, 55, 61, 64, 65, 67, 68], "tupl": [11, 47], "tutori": 2, "two": [47, 58, 61], "type": [1, 5, 7, 9, 11, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "type_": 25, "union": [0, 5, 11, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60], "union_al": [0, 11, 61], "union_t": 61, "unit": [3, 9], "up": 3, "updat": [64, 66, 67, 68], "upstream": 11, "us": [1, 2, 5, 7, 9, 11, 13, 15, 17, 20, 23, 40, 46, 47, 51, 54, 61, 63, 64, 65, 66, 68], "usenam": 3, "user": [3, 5, 7, 9, 13, 15, 17, 64, 65, 66, 67, 68], "usernam": [5, 64, 65, 66, 67, 68], "util": [64, 65, 66, 67, 68], "v1": [66, 68], "v2": [67, 68], "valu": [22, 29, 30, 31, 34, 42, 43, 45, 46, 47, 50], "value_count": 68, "valuenum": 63, "virtual": 1, "visit": 63, "visit_count": 46, "visit_detail": [0, 17, 68], "visit_id": 40, "visit_occurr": [0, 17, 68], "visit_occurrence_id": 68, "visit_start_d": 68, "visits_concept_map": 68, "visits_concept_mapped_di": 68, "visits_measur": 68, "vital": [63, 65], "vitalaperiod": 64, "vitalperiod": 64, "vocabulari": 68, "we": [1, 68], "weight": 68, "welcom": 3, "were": 63, "when": [5, 38, 47, 54], "where": [11, 59], "wherea": 19, "whether": [5, 7, 9, 11, 13, 15, 17, 38, 52, 55, 61], "which": [1, 5, 11, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 68], "whitespac": 60, "who": 63, "work": 19, "wrap": [9, 10, 11, 13, 15, 17], "wrapper": [3, 63], "write": 3, "x": 24, "y": 24, "year": [15, 32, 33, 44, 63, 68], "you": [1, 63], "your": 1, "yyyi": [26, 27]}, "titles": ["API Reference", "Contributing to cycquery", "Welcome to cycquery\u2019s documentation!", "cycquery", "cycquery.base", "cycquery.base.DatasetQuerier", "cycquery.eicu", "cycquery.eicu.EICUQuerier", "cycquery.gemini", "cycquery.gemini.GEMINIQuerier", "cycquery.interface", "cycquery.interface.QueryInterface", "cycquery.mimiciii", "cycquery.mimiciii.MIMICIIIQuerier", "cycquery.mimiciv", "cycquery.mimiciv.MIMICIVQuerier", "cycquery.omop", "cycquery.omop.OMOPQuerier", "cycquery.ops", "cycquery.ops.AddColumn", "cycquery.ops.AddDeltaColumn", "cycquery.ops.AddDeltaConstant", "cycquery.ops.AddNumeric", "cycquery.ops.And", "cycquery.ops.Apply", "cycquery.ops.Cast", "cycquery.ops.ConditionAfterDate", "cycquery.ops.ConditionBeforeDate", "cycquery.ops.ConditionEndsWith", "cycquery.ops.ConditionEquals", "cycquery.ops.ConditionGreaterThan", "cycquery.ops.ConditionIn", "cycquery.ops.ConditionInMonths", "cycquery.ops.ConditionInYears", "cycquery.ops.ConditionLessThan", "cycquery.ops.ConditionLike", "cycquery.ops.ConditionRegexMatch", "cycquery.ops.ConditionStartsWith", "cycquery.ops.ConditionSubstring", "cycquery.ops.Count", "cycquery.ops.Distinct", "cycquery.ops.Drop", "cycquery.ops.DropEmpty", "cycquery.ops.DropNulls", "cycquery.ops.ExtractTimestampComponent", "cycquery.ops.FillNull", "cycquery.ops.GroupByAggregate", "cycquery.ops.Join", "cycquery.ops.Keep", "cycquery.ops.Limit", "cycquery.ops.Literal", "cycquery.ops.Or", "cycquery.ops.OrderBy", "cycquery.ops.QueryOp", "cycquery.ops.RandomizeOrder", "cycquery.ops.Rename", "cycquery.ops.Reorder", "cycquery.ops.ReorderAfter", "cycquery.ops.Sequential", "cycquery.ops.Substring", "cycquery.ops.Trim", "cycquery.ops.Union", "cycquery", "Tutorials", "eICU-CRD tutorial", "GEMINI tutorial", "MIMIC-III tutorial", "MIMIC-IV tutorial", "OMOP tutorial"], "titleterms": {"": 2, "1": [64, 65, 66, 67, 68], "10": 67, "100": 64, "101": 65, "1a": 65, "1b": 65, "1c": 65, "2": [64, 66, 67, 68], "20": 66, "2009": 67, "2010": 68, "2014": 64, "2015": [64, 65, 67], "2016": 65, "2020": 68, "2021": 67, "2a": 65, "3": [64, 66, 67], "31": 65, "4": [64, 66, 67], "5": 67, "6": 67, "7": 67, "8": 67, "9": [66, 67], "And": 23, "Or": 51, "aado2": 66, "abov": 65, "addcolumn": 19, "adddeltacolumn": 20, "adddeltaconst": 21, "addnumer": 22, "admiss": [65, 67], "advanc": 67, "after": 68, "all": [64, 66, 67, 68], "api": [0, 62], "appli": 24, "approx": 67, "apr": 65, "april": 65, "base": [4, 5], "batch": 67, "between": 65, "carevu": 66, "cast": 25, "chart": 66, "chronic": 67, "code": 1, "commit": 1, "conditionafterd": 26, "conditionbefored": 27, "conditionendswith": 28, "conditionequ": 29, "conditiongreaterthan": 30, "conditionin": 31, "conditioninmonth": 32, "conditioninyear": 33, "conditionlessthan": 34, "conditionlik": 35, "conditionregexmatch": [36, 67], "conditionstartswith": 37, "conditionsubstr": 38, "contain": 67, "content": 2, "contribut": [1, 3], "count": 39, "crd": 64, "creat": 65, "cycqueri": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67], "databas": 3, "dataset": [62, 65], "datasetqueri": 5, "develop": 3, "diagnos": [64, 66, 67, 68], "diagnosisstr": 64, "discharg": [64, 65], "discharge_date_tim": 65, "distinct": 40, "document": [2, 3], "drop": 41, "dropempti": 42, "dropnul": 43, "each": 65, "eicu": [6, 7, 64], "eicuqueri": [7, 64], "encount": [64, 65, 66, 67], "end": 68, "event": 66, "exampl": [64, 65, 66, 67, 68], "extracttimestampcompon": 44, "femal": [64, 66, 67, 68], "fillnul": 45, "filter": 67, "from": [65, 67], "gastroenter": 66, "gemini": [8, 9, 65], "geminiqueri": [9, 65], "get": [3, 64, 65, 66, 67, 68], "glucos": 64, "groupbyaggreg": 46, "guidelin": 1, "have": 66, "hemoglobin": 67, "hook": 1, "hospit": [64, 65], "how": 65, "icd": [66, 67], "iii": 66, "import": [64, 65, 66, 67, 68], "index": 67, "infecti": 67, "instal": 3, "instanti": [64, 65, 66, 67, 68], "interfac": [10, 11], "iv": 67, "join": 47, "keep": [48, 65], "keyword": 67, "lab": [64, 66, 67], "later": 67, "less": 66, "limit": [49, 64], "liter": 50, "long": [66, 67], "lymphadenopathi": 67, "mai": 65, "male": 66, "mani": 65, "march": 65, "measur": 68, "medic": 64, "mimic": [66, 67], "mimiciii": [12, 13], "mimiciiiqueri": [13, 66], "mimiciv": [14, 15], "mimicivqueri": [15, 67], "mortal": [66, 68], "most": 65, "number": 65, "occur": 67, "omop": [16, 17, 68], "omopqueri": [17, 68], "one": 65, "onli": 65, "op": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67], "orderbi": 52, "outcom": [66, 68], "partit": 67, "patient": [64, 65, 66, 67, 68], "patient_id_hash": 65, "per": 65, "pip": 3, "place": 65, "poetri": 3, "postgresql": 3, "potassium": [64, 66], "pre": 1, "queri": 3, "queryinterfac": 11, "queryop": 53, "radiologi": 67, "randomizeord": 54, "raw": 67, "recent": 65, "record": 65, "refer": 0, "renam": 55, "reorder": 56, "reorderaft": 57, "report": 67, "return": 67, "routin": 67, "row": 64, "run": 67, "schizophrenia": [64, 67], "search": 64, "sepsi": 68, "sequenti": 58, "set": 65, "sign": 67, "sodium": 65, "sort": 65, "sql": 67, "start": 3, "string": 67, "subject_id": 67, "subset": 65, "substr": [59, 64], "tabl": 65, "take": 65, "teach": 64, "test": [64, 65, 66, 67], "than": 66, "titl": [66, 67], "togeth": 67, "total": 65, "trim": 60, "tutori": [63, 64, 65, 66, 67, 68], "union": 61, "us": [3, 67], "valuenum": 66, "visit": 68, "vital": 67, "welcom": 2, "were": 65, "who": 65, "year": [64, 67]}})